# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Assigning permissions to jobs
# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions:
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # ------------------------------------------------------------------------------------
  # ------------------------------------------------------------------------------------
  # This workflow contains a single job called "auth-ms" running pytest
  auth-ms:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.0.0

      # Using a specific Python version
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#using-a-specific-python-version
      - name: Set up Python 3.11.5
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.11.5'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
          #cache: 'pip' #TODO: check documentation about cache
      
      # Print current python version
      - name: Python Version
        run: python -c "import sys; print(sys.version)"
      
      # Installing dependencies
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#installing-dependencies
      - name: Install Dependencies
        run: python -m pip install --upgrade pip
      
      # Install dependencies from apps/backend/auth/requirements.txt
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#requirements-file
      - name: Requirements File
        run: |
          pip install -r apps/backend/auth/requirements.txt
      
      # Using Ruff to lint code
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#using-ruff-to-lint-code
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --format=github --target-version=py311 apps/backend/auth/
        continue-on-error: false
      
      # Testing your code
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#testing-your-code
      - name: Testing
        env:
          name: Auth
          version: 0.0.0
          build_env: TEST
          access_token_expire_minutes: 30
          jwt_algorithm: HS256
          jwt_secret_key: 591e6e6715cd253bf9316268bf5b4da57476fd6cf64fedb6b5c56ed7b84acee5
        run: |
          pytest -v -s -W ignore::DeprecationWarning --cov=apps/backend/auth/src apps/backend/auth
  # ------------------------------------------------------------------------------------
  # ------------------------------------------------------------------------------------
  # This workflow contains a single job called "owner-ms" running pytest
  owner-ms:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.0.0

      # Using a specific Python version
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#using-a-specific-python-version
      - name: Set up Python 3.11.5
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.11.5'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
          #cache: 'pip' #TODO: check documentation about cache
      
      # Print current python version
      - name: Python Version
        run: python -c "import sys; print(sys.version)"
      
      # Installing dependencies
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#installing-dependencies
      - name: Install Dependencies
        run: python -m pip install --upgrade pip
      
      # Install dependencies from apps/backend/owner/requirements.txt
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#requirements-file
      - name: Requirements File
        run: |
          pip install -r apps/backend/owner/requirements.txt
      
      # Using Ruff to lint code
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#using-ruff-to-lint-code
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --format=github --target-version=py311 apps/backend/owner/
        continue-on-error: false
      
      # Testing your code
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#testing-your-code
      - name: Testing
        env:
          name: Owner
          version: 0.0.0
          build_env: TEST
          access_token_expire_minutes: 30
          jwt_algorithm: HS256
          jwt_secret_key: 591e6e6715cd253bf9316268bf5b4da57476fd6cf64fedb6b5c56ed7b84acee5
        run: |
          pytest -v -s -W ignore::DeprecationWarning --cov=apps/backend/owner/src apps/backend/owner
  # ------------------------------------------------------------------------------------
  # ------------------------------------------------------------------------------------
  # This workflow contains a single job called "property-ms" running pytest
  property-ms:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.0.0

      # Using a specific Python version
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#using-a-specific-python-version
      - name: Set up Python 3.11.5
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.11.5'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
          #cache: 'pip' #TODO: check documentation about cache
      
      # Print current python version
      - name: Python Version
        run: python -c "import sys; print(sys.version)"
      
      # Installing dependencies
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#installing-dependencies
      - name: Install Dependencies
        run: python -m pip install --upgrade pip
      
      # Install dependencies from apps/backend/property/requirements.txt
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#requirements-file
      - name: Requirements File
        run: |
          pip install -r apps/backend/property/requirements.txt
      
      # Using Ruff to lint code
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#using-ruff-to-lint-code
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --format=github --target-version=py311 apps/backend/property/
        continue-on-error: false
      
      # Testing your code
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#testing-your-code
      - name: Testing
        env:
          name: Property
          version: 0.0.0
          build_env: TEST
          access_token_expire_minutes: 30
          jwt_algorithm: HS256
          jwt_secret_key: 591e6e6715cd253bf9316268bf5b4da57476fd6cf64fedb6b5c56ed7b84acee5
        run: |
          pytest -v -s -W ignore::DeprecationWarning --cov=apps/backend/property/src apps/backend/property
  # ------------------------------------------------------------------------------------
  # ------------------------------------------------------------------------------------
  # This workflow contains a single job called "property-image-ms" running pytest
  property-image-ms:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.0.0

      # Using a specific Python version
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#using-a-specific-python-version
      - name: Set up Python 3.11.5
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.11.5'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
          #cache: 'pip' #TODO: check documentation about cache
      
      # Print current python version
      - name: Python Version
        run: python -c "import sys; print(sys.version)"
      
      # Installing dependencies
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#installing-dependencies
      - name: Install Dependencies
        run: python -m pip install --upgrade pip
      
      # Install dependencies from apps/backend/property_image/requirements.txt
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#requirements-file
      - name: Requirements File
        run: |
          pip install -r apps/backend/property_image/requirements.txt
      
      # Using Ruff to lint code
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#using-ruff-to-lint-code
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --format=github --target-version=py311 apps/backend/property_image/
        continue-on-error: false
      
      # Testing your code
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#testing-your-code
      - name: Testing
        env:
          name: Property
          version: 0.0.0
          build_env: TEST
          access_token_expire_minutes: 30
          jwt_algorithm: HS256
          jwt_secret_key: 591e6e6715cd253bf9316268bf5b4da57476fd6cf64fedb6b5c56ed7b84acee5
        run: |
          pytest -v -s -W ignore::DeprecationWarning --cov=apps/backend/property_image/src apps/backend/property_image
